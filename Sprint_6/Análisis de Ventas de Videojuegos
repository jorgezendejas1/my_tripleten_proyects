{"cells":[{"cell_type":"code","source":["{\n"," \"cells\": [\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"# Proyecto Integrado 1: Análisis de Ventas de Videojuegos\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Trabajamos para la tienda online Ice, que vende videojuegos en todo el mundo. Nuestro objetivo es identificar patrones que determinen si un juego será un éxito comercial. Esto nos permitirá detectar proyectos prometedores y planificar campañas publicitarias para 2017.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 1: Abrir el archivo de datos y estudiar la información general\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Primero, importamos las librerías que necesitaremos\\n\",\n","    \"import pandas as pd\\n\",\n","    \"import matplotlib.pyplot as plt\\n\",\n","    \"import seaborn as sns\\n\",\n","    \"from scipy import stats as st\\n\",\n","    \"import numpy as np\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Cargamos el dataset desde la URL proporcionada\\n\",\n","    \"try:\\n\",\n","    \"    df = pd.read_csv('https://practicum-content.s3.us-west-1.amazonaws.com/datasets/games.csv')\\n\",\n","    \"except:\\n\",\n","    \"    print('Error al cargar el archivo. Verifica la ruta.')\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Ahora, exploremos los datos para entender su estructura.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Mostramos las primeras 5 filas para ver cómo lucen los datos\\n\",\n","    \"df.head()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Obtenemos información general del dataset: columnas, tipos de datos y valores no nulos\\n\",\n","    \"df.info()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Observaciones iniciales:**\\n\",\n","    \"* Los nombres de las columnas están en mayúsculas y minúsculas (ej. `Name`, `Year_of_Release`). Sería bueno estandarizarlos a minúsculas.\\n\",\n","    \"* `Year_of_Release`, `Critic_Score`, `User_Score` y `Rating` tienen valores ausentes.\\n\",\n","    \"* `Year_of_Release` debería ser un tipo de dato entero (año), pero es `float64` probablemente por los valores ausentes (NaN).\\n\",\n","    \"* `User_Score` es de tipo `object` (texto), lo que indica que puede contener valores no numéricos que debemos investigar.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 2. Prepara los datos\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 2.1. Reemplazar nombres de las columnas (a minúsculas)\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"df.columns = df.columns.str.lower()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Verificamos que los nombres de las columnas ahora están en minúsculas\\n\",\n","    \"df.columns\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 2.2. Convertir los datos a los tipos necesarios y tratar valores ausentes\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"#### Columna `user_score`\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Revisamos los valores únicos en 'user_score' para entender por qué es de tipo 'object'\\n\",\n","    \"df['user_score'].unique()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Vemos que existe el valor 'tbd', que significa \\\"To Be Determined\\\" (A determinar). Este valor no es numérico y es similar a un valor ausente, ya que no hay una puntuación real. Lo reemplazaremos con `NaN` (Not a Number) para poder convertir la columna a un tipo numérico.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Reemplazamos 'tbd' con NaN\\n\",\n","    \"df['user_score'] = df['user_score'].replace('tbd', np.nan)\\n\",\n","    \"\\n\",\n","    \"# Convertimos la columna a tipo numérico (float)\\n\",\n","    \"df['user_score'] = df['user_score'].astype('float')\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"#### Columna `year_of_release`\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Revisamos cuántos valores ausentes hay en 'year_of_release'\\n\",\n","    \"print(f\\\"Valores ausentes en 'year_of_release': {df['year_of_release'].isna().sum()}\\\")\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"El número de filas con año ausente es pequeño en comparación con el total del dataset. Dado que el año de lanzamiento es crucial para nuestro análisis temporal, y no podemos deducirlo con certeza, decidimos eliminar estas filas.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Eliminamos las filas con 'year_of_release' ausente\\n\",\n","    \"df.dropna(subset=['year_of_release'], inplace=True)\\n\",\n","    \"\\n\",\n","    \"# Convertimos la columna a tipo entero\\n\",\n","    \"df['year_of_release'] = df['year_of_release'].astype('int')\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"#### Columnas `critic_score` y `rating`\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Los valores ausentes en `critic_score`, `user_score` y `rating` probablemente significan que el juego no recibió una puntuación o clasificación. Rellenarlos con un valor (como cero o la media) podría distorsionar el análisis. Por ejemplo, un cero podría interpretarse como una puntuación muy mala en lugar de una ausente. Por lo tanto, los dejaremos como NaN y los tendremos en cuenta en análisis específicos.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Para la columna `rating`, podemos rellenar los valores ausentes con una categoría como 'unknown' (desconocido) para poder usarla en agrupaciones.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"df['rating'] = df['rating'].fillna('unknown')\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Verificamos los tipos de datos y los nulos después de la limpieza\\n\",\n","    \"df.info()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 2.3. Calcular ventas totales\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Sumamos las ventas de todas las regiones para crear la columna 'total_sales'\\n\",\n","    \"df['total_sales'] = df[['na_sales', 'eu_sales', 'jp_sales', 'other_sales']].sum(axis=1)\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Verificamos la nueva columna\\n\",\n","    \"df.head()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 3. Analiza los datos\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.1. ¿Cuántos juegos fueron lanzados en diferentes años?\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Agrupamos por año y contamos la cantidad de juegos\\n\",\n","    \"games_per_year = df.groupby('year_of_release')['name'].count()\\n\",\n","    \"\\n\",\n","    \"# Creamos un gráfico de barras para visualizarlo\\n\",\n","    \"plt.figure(figsize=(12, 6))\\n\",\n","    \"games_per_year.plot(kind='bar', color='skyblue')\\n\",\n","    \"plt.title('Número de juegos lanzados por año')\\n\",\n","    \"plt.xlabel('Año de lanzamiento')\\n\",\n","    \"plt.ylabel('Número de juegos')\\n\",\n","    \"plt.grid(axis='y', linestyle='--')\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:** La cantidad de juegos lanzados por año fue muy baja antes de mediados de los 90. El pico de lanzamientos ocurrió entre 2008 y 2011. Los datos de los primeros años no son muy significativos para predecir el futuro, ya que la industria era muy diferente.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.2. Ventas por plataforma\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Agrupamos por plataforma y sumamos las ventas totales\\n\",\n","    \"platform_sales = df.groupby('platform')['total_sales'].sum().sort_values(ascending=False)\\n\",\n","    \"\\n\",\n","    \"# Seleccionamos las 10 plataformas con mayores ventas históricas\\n\",\n","    \"top_platforms = platform_sales.head(10).index\\n\",\n","    \"\\n\",\n","    \"print(\\\"Plataformas con mayores ventas totales:\\\")\\n\",\n","    \"print(platform_sales.head(10))\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Creamos una tabla dinámica para ver las ventas anuales de estas plataformas\\n\",\n","    \"platform_sales_by_year = df[df['platform'].isin(top_platforms)].pivot_table(\\n\",\n","    \"    index='year_of_release', \\n\",\n","    \"    columns='platform', \\n\",\n","    \"    values='total_sales', \\n\",\n","    \"    aggfunc='sum'\\n\",\n","    \")\\n\",\n","    \"\\n\",\n","    \"# Graficamos las ventas a lo largo del tiempo\\n\",\n","    \"plt.figure(figsize=(14, 8))\\n\",\n","    \"sns.lineplot(data=platform_sales_by_year)\\n\",\n","    \"plt.title('Ventas anuales por plataforma (Top 10 histórico)')\\n\",\n","    \"plt.xlabel('Año de lanzamiento')\\n\",\n","    \"plt.ylabel('Ventas totales (millones)')\\n\",\n","    \"plt.legend(title='Plataforma')\\n\",\n","    \"plt.grid(True)\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:** Observamos que el ciclo de vida de una consola es de aproximadamente 10 años, con un pico de ventas alrededor de los 5-6 años desde su lanzamiento. Plataformas como PS2, DS y Wii, que fueron muy populares, ya no tienen ventas significativas. Para predecir las ventas de 2017, no tiene sentido usar datos de plataformas antiguas.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.3. Determinar el período de datos relevante\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Para construir un modelo para 2017, debemos usar datos recientes que reflejen el estado actual del mercado. El lanzamiento de la PS4 y Xbox One ocurrió a finales de 2013. Por lo tanto, un período relevante sería **de 2013 a 2016**. Esto nos permite ver el crecimiento de las nuevas consolas y la decadencia de las anteriores (PS3, Xbox 360).\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Creamos un nuevo DataFrame solo con los datos del período relevante\\n\",\n","    \"df_relevant = df[df['year_of_release'] >= 2013].copy()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.4. Plataformas líderes y potencialmente rentables\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Ventas por plataforma en el período relevante\\n\",\n","    \"platform_sales_relevant = df_relevant.pivot_table(\\n\",\n","    \"    index='year_of_release', \\n\",\n","    \"    columns='platform', \\n\",\n","    \"    values='total_sales', \\n\",\n","    \"    aggfunc='sum'\\n\",\n","    \")\\n\",\n","    \"\\n\",\n","    \"plt.figure(figsize=(14, 8))\\n\",\n","    \"sns.lineplot(data=platform_sales_relevant)\\n\",\n","    \"plt.title('Ventas anuales por plataforma (2013-2016)')\\n\",\n","    \"plt.xlabel('Año')\\n\",\n","    \"plt.ylabel('Ventas totales (millones)')\\n\",\n","    \"plt.grid(True)\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:** \\n\",\n","    \"* **Líderes en ventas:** PS4 es el líder claro en el período 2013-2016, seguido por Xbox One.\\n\",\n","    \"* **En crecimiento:** PS4 y Xbox One muestran una tendencia de crecimiento o se mantienen estables en ventas altas.\\n\",\n","    \"* **En reducción:** PS3 y Xbox 360 están en clara decadencia. La 3DS también muestra una tendencia a la baja.\\n\",\n","    \"* **Potencialmente rentables para 2017:** PS4 y Xbox One son las plataformas más prometedoras.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.5. Diagrama de caja para ventas globales por plataforma\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"plt.figure(figsize=(15, 8))\\n\",\n","    \"sns.boxplot(data=df_relevant, x='platform', y='total_sales', order=df_relevant.groupby('platform')['total_sales'].median().sort_values(ascending=False).index)\\n\",\n","    \"plt.title('Ventas globales por juego para cada plataforma (2013-2016)')\\n\",\n","    \"plt.xlabel('Plataforma')\\n\",\n","    \"plt.ylabel('Ventas globales (millones)')\\n\",\n","    \"\\n\",\n","    \"# Para una mejor visualización de las cajas, limitamos el eje Y, ya que hay muchos valores atípicos (juegos muy exitosos)\\n\",\n","    \"plt.ylim(0, 2) \\n\",\n","    \"\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:**\\n\",\n","    \"El diagrama de caja (con el eje Y limitado para mejor visualización) muestra que las ventas medianas por juego son más altas en las plataformas de \\\"nueva generación\\\" como PS4, Xbox One y Wii U. La mayoría de los juegos en todas las plataformas venden menos de 1 millón de unidades, pero hay muchos valores atípicos (puntos fuera de los \\\"bigotes\\\") que representan los grandes éxitos de ventas. Las diferencias en las ventas medianas entre las principales plataformas (PS4, XOne, 360, PS3) no son enormes, pero PS4 y XOne tienen una mediana ligeramente superior.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.6. Influencia de las reseñas en las ventas (ejemplo: PS4)\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Filtramos los datos para la plataforma PS4\\n\",\n","    \"ps4_data = df_relevant[df_relevant['platform'] == 'PS4']\\n\",\n","    \"\\n\",\n","    \"# Gráfico de dispersión: Puntuación de la crítica vs. Ventas\\n\",\n","    \"plt.figure(figsize=(12, 5))\\n\",\n","    \"\\n\",\n","    \"plt.subplot(1, 2, 1)\\n\",\n","    \"sns.scatterplot(data=ps4_data, x='critic_score', y='total_sales')\\n\",\n","    \"plt.title('Crítica vs. Ventas (PS4)')\\n\",\n","    \"plt.xlabel('Puntuación de la crítica')\\n\",\n","    \"plt.ylabel('Ventas totales (millones)')\\n\",\n","    \"\\n\",\n","    \"# Gráfico de dispersión: Puntuación de los usuarios vs. Ventas\\n\",\n","    \"plt.subplot(1, 2, 2)\\n\",\n","    \"sns.scatterplot(data=ps4_data, x='user_score', y='total_sales')\\n\",\n","    \"plt.title('Usuarios vs. Ventas (PS4)')\\n\",\n","    \"plt.xlabel('Puntuación de los usuarios')\\n\",\n","    \"plt.ylabel('Ventas totales (millones)')\\n\",\n","    \"\\n\",\n","    \"plt.tight_layout()\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Calculamos la correlación\\n\",\n","    \"correlation_ps4 = ps4_data[['critic_score', 'user_score', 'total_sales']].corr()\\n\",\n","    \"print(\\\"Correlación entre reseñas y ventas para PS4:\\\")\\n\",\n","    \"print(correlation_ps4)\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:**\\n\",\n","    \"* **Reseñas de la crítica:** Existe una correlación positiva moderada (0.40) entre la puntuación de la crítica y las ventas. Los juegos con mejores críticas tienden a vender más, aunque no es una regla estricta.\\n\",\n","    \"* **Reseñas de los usuarios:** La correlación entre la puntuación de los usuarios y las ventas es muy débil, casi inexistente (-0.03). Esto sugiere que las opiniones de los usuarios no tienen un impacto directo y medible en las ventas totales de un juego en la plataforma PS4.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### 3.7. Distribución de juegos por género\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Calculamos las ventas totales por género en el período relevante\\n\",\n","    \"genre_sales = df_relevant.groupby('genre')['total_sales'].sum().sort_values(ascending=False)\\n\",\n","    \"\\n\",\n","    \"plt.figure(figsize=(12, 7))\\n\",\n","    \"genre_sales.plot(kind='bar')\\n\",\n","    \"plt.title('Ventas totales por género (2013-2016)')\\n\",\n","    \"plt.xlabel('Género')\\n\",\n","    \"plt.ylabel('Ventas totales (millones)')\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# También podemos ver las ventas medianas por género para evitar el sesgo de los grandes éxitos\\n\",\n","    \"plt.figure(figsize=(15, 8))\\n\",\n","    \"sns.boxplot(data=df_relevant, x='genre', y='total_sales', order=df_relevant.groupby('genre')['total_sales'].median().sort_values(ascending=False).index)\\n\",\n","    \"plt.title('Distribución de ventas por género (2013-2016)')\\n\",\n","    \"plt.xlabel('Género')\\n\",\n","    \"plt.ylabel('Ventas globales (millones)')\\n\",\n","    \"plt.ylim(0, 2.5)\\n\",\n","    \"plt.xticks(rotation=45)\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusión:**\\n\",\n","    \"* **Géneros más rentables (en ventas totales):** Acción, Disparos (Shooter), Deportes y Rol son los géneros que más ingresos generan.\\n\",\n","    \"* **Géneros con ventas medianas más altas:** El género de Disparos (Shooter) tiene la mediana de ventas más alta, lo que indica que, en general, un juego de este género tiende a vender más que un juego promedio de otros géneros. Le siguen Deportes y Plataformas.\\n\",\n","    \"* **Géneros con ventas más bajas:** Aventura, Puzzle y Estrategia tienen las ventas totales y medianas más bajas.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 4. Crea un perfil de usuario para cada región\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Creamos una función para obtener el top 5 de una categoría para una región\\n\",\n","    \"def get_top5_by_region(df, category, region_sales):\\n\",\n","    \"    top5 = df.groupby(category)[region_sales].sum().sort_values(ascending=False).head(5)\\n\",\n","    \"    return top5\\n\",\n","    \"\\n\",\n","    \"# Obtenemos los datos para cada región\\n\",\n","    \"na_top_platforms = get_top5_by_region(df_relevant, 'platform', 'na_sales')\\n\",\n","    \"eu_top_platforms = get_top5_by_region(df_relevant, 'platform', 'eu_sales')\\n\",\n","    \"jp_top_platforms = get_top5_by_region(df_relevant, 'platform', 'jp_sales')\\n\",\n","    \"\\n\",\n","    \"na_top_genres = get_top5_by_region(df_relevant, 'genre', 'na_sales')\\n\",\n","    \"eu_top_genres = get_top5_by_region(df_relevant, 'genre', 'eu_sales')\\n\",\n","    \"jp_top_genres = get_top5_by_region(df_relevant, 'genre', 'jp_sales')\\n\",\n","    \"\\n\",\n","    \"na_top_ratings = get_top5_by_region(df_relevant, 'rating', 'na_sales')\\n\",\n","    \"eu_top_ratings = get_top5_by_region(df_relevant, 'rating', 'eu_sales')\\n\",\n","    \"jp_top_ratings = get_top5_by_region(df_relevant, 'rating', 'jp_sales')\\n\",\n","    \"\\n\",\n","    \"# Graficamos los resultados\\n\",\n","    \"fig, axes = plt.subplots(3, 3, figsize=(20, 15))\\n\",\n","    \"\\n\",\n","    \"na_top_platforms.plot(kind='bar', ax=axes[0, 0], title='Top 5 Plataformas - Norteamérica')\\n\",\n","    \"eu_top_platforms.plot(kind='bar', ax=axes[0, 1], title='Top 5 Plataformas - Europa')\\n\",\n","    \"jp_top_platforms.plot(kind='bar', ax=axes[0, 2], title='Top 5 Plataformas - Japón')\\n\",\n","    \"\\n\",\n","    \"na_top_genres.plot(kind='bar', ax=axes[1, 0], title='Top 5 Géneros - Norteamérica')\\n\",\n","    \"eu_top_genres.plot(kind='bar', ax=axes[1, 1], title='Top 5 Géneros - Europa')\\n\",\n","    \"jp_top_genres.plot(kind='bar', ax=axes[1, 2], title='Top 5 Géneros - Japón')\\n\",\n","    \"\\n\",\n","    \"na_top_ratings.plot(kind='bar', ax=axes[2, 0], title='Top 5 Ratings ESRB - Norteamérica')\\n\",\n","    \"eu_top_ratings.plot(kind='bar', ax=axes[2, 1], title='Top 5 Ratings ESRB - Europa')\\n\",\n","    \"jp_top_ratings.plot(kind='bar', ax=axes[2, 2], title='Top 5 Ratings ESRB - Japón')\\n\",\n","    \"\\n\",\n","    \"plt.tight_layout()\\n\",\n","    \"plt.show()\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"**Conclusiones por región:**\\n\",\n","    \"\\n\",\n","    \"**1. Plataformas:**\\n\",\n","    \"* **Norteamérica (NA):** PS4 y Xbox One dominan claramente, con una preferencia ligeramente mayor por la PS4. Las consolas de Microsoft tienen una fuerte presencia aquí.\\n\",\n","    \"* **Europa (EU):** PS4 es el líder indiscutible, con una ventaja mucho mayor sobre Xbox One que en NA. El mercado europeo tiene una fuerte preferencia por PlayStation.\\n\",\n","    \"* **Japón (JP):** El mercado es completamente diferente. Las consolas portátiles como la 3DS son las más populares, seguidas por la PS4. La PS Vita y la WiiU también tienen presencia, mientras que Xbox One es casi irrelevante.\\n\",\n","    \"\\n\",\n","    \"**2. Géneros:**\\n\",\n","    \"* **NA y EU:** Son muy similares. Los géneros de Acción, Disparos y Deportes son los más vendidos, reflejando un gusto por géneros de acción y competitivos.\\n\",\n","    \"* **Japón:** Los juegos de Rol (RPG) son, por mucho, el género más popular, seguido de Acción. Esto muestra una clara preferencia cultural por géneros con narrativas profundas.\\n\",\n","    \"\\n\",\n","    \"**3. Clasificación ESRB:**\\n\",\n","    \"* **NA y EU:** Los juegos con clasificación 'M' (Mature 17+) son los más vendidos, lo que se alinea con la popularidad de los géneros de Acción y Disparos. Le siguen los juegos 'E' (Everyone).\\n\",\n","    \"* **Japón:** La categoría 'unknown' (desconocido) es la que más ventas tiene, lo que sugiere que muchos juegos en Japón no usan o no registran la clasificación ESRB (pueden usar CERO, su propio sistema). Después, los juegos 'T' (Teen) y 'E' (Everyone) son los más populares.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 5. Prueba de hipótesis\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### Hipótesis 1: Las calificaciones promedio de los usuarios para las plataformas Xbox One y PC son las mismas.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"* **Hipótesis Nula (H₀):** La calificación promedio de los usuarios para Xbox One es IGUAL a la calificación promedio de los usuarios para PC.\\n\",\n","    \"* **Hipótesis Alternativa (H₁):** La calificación promedio de los usuarios para Xbox One es DIFERENTE a la calificación promedio de los usuarios para PC.\\n\",\n","    \"\\n\",\n","    \"Usaremos la prueba t de Student para muestras independientes (`ttest_ind`) porque estamos comparando las medias de dos grupos diferentes de datos. Establecemos un nivel de significancia (alfa) de 0.05.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Preparamos las dos muestras, eliminando los valores ausentes\\n\",\n","    \"xone_scores = df_relevant[df_relevant['platform'] == 'XOne']['user_score'].dropna()\\n\",\n","    \"pc_scores = df_relevant[df_relevant['platform'] == 'PC']['user_score'].dropna()\\n\",\n","    \"\\n\",\n","    \"alpha = 0.05  # Nivel de significancia\\n\",\n","    \"\\n\",\n","    \"# Realizamos la prueba t\\n\",\n","    \"results_1 = st.ttest_ind(xone_scores, pc_scores, equal_var=False) # Usamos equal_var=False ya que las varianzas pueden ser diferentes\\n\",\n","    \"\\n\",\n","    \"print('p-value:', results_1.pvalue)\\n\",\n","    \"\\n\",\n","    \"if results_1.pvalue < alpha:\\n\",\n","    \"    print(\\\"Rechazamos la hipótesis nula: Las calificaciones promedio son diferentes.\\\")\\n\",\n","    \"else:\\n\",\n","    \"    print(\\\"No podemos rechazar la hipótesis nula: Las calificaciones promedio son iguales.\\\")\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"### Hipótesis 2: Las calificaciones promedio de los usuarios para los géneros de Acción y Deportes son diferentes.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"* **Hipótesis Nula (H₀):** La calificación promedio de los usuarios para el género Acción es IGUAL a la del género Deportes.\\n\",\n","    \"* **Hipótesis Alternativa (H₁):** La calificación promedio de los usuarios para el género Acción es DIFERENTE a la del género Deportes.\\n\",\n","    \"\\n\",\n","    \"Nuevamente, usaremos la prueba t de Student para muestras independientes con un alfa de 0.05.\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"code\",\n","   \"execution_count\": null,\n","   \"metadata\": {},\n","   \"outputs\": [],\n","   \"source\": [\n","    \"# Preparamos las dos muestras, eliminando los valores ausentes\\n\",\n","    \"action_scores = df_relevant[df_relevant['genre'] == 'Action']['user_score'].dropna()\\n\",\n","    \"sports_scores = df_relevant[df_relevant['genre'] == 'Sports']['user_score'].dropna()\\n\",\n","    \"\\n\",\n","    \"alpha = 0.05 # Nivel de significancia\\n\",\n","    \"\\n\",\n","    \"# Realizamos la prueba t\\n\",\n","    \"results_2 = st.ttest_ind(action_scores, sports_scores, equal_var=False)\\n\",\n","    \"\\n\",\n","    \"print('p-value:', results_2.pvalue)\\n\",\n","    \"\\n\",\n","    \"if results_2.pvalue < alpha:\\n\",\n","    \"    print(\\\"Rechazamos la hipótesis nula: Las calificaciones promedio son diferentes.\\\")\\n\",\n","    \"else:\\n\",\n","    \"    print(\\\"No podemos rechazar la hipótesis nula: Las calificaciones promedio son iguales.\\\")\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"## Paso 6. Conclusión general\"\n","   ]\n","  },\n","  {\n","   \"cell_type\": \"markdown\",\n","   \"metadata\": {},\n","   \"source\": [\n","    \"Tras analizar los datos de ventas de videojuegos con el objetivo de planificar la campaña de 2017, hemos llegado a las siguientes conclusiones clave:\\n\",\n","    \"\\n\",\n","    \"1.  **Período Relevante:** La industria del videojuego cambia rápidamente. El análisis se centró en el período de **2013-2016**, que abarca el ciclo de vida de la generación de consolas actual (PS4, Xbox One) y la decadencia de la anterior, proporcionando una visión precisa del mercado actual.\\n\",\n","    \"\\n\",\n","    \"2.  **Plataformas Prometedoras:** Las plataformas más rentables y con mayor potencial de crecimiento para 2017 son la **PlayStation 4** y la **Xbox One**. La PS4 lidera el mercado global, especialmente en Europa, mientras que la Xbox One tiene una fuerte presencia en Norteamérica. En Japón, el mercado es único, con un dominio de las consolas portátiles como la **Nintendo 3DS**.\\n\",\n","    \"\\n\",\n","    \"3.  **Géneros de Mayor Éxito:** A nivel mundial, los géneros de **Acción** y **Disparos (Shooter)** son los que generan más ingresos. Los juegos de **Deportes** y **Rol** también son muy populares. Sin embargo, hay diferencias regionales significativas: mientras que en Occidente (NA y EU) dominan los géneros de acción, en Japón los juegos de **Rol (RPG)** son los preferidos por un amplio margen.\\n\",\n","    \"\\n\",\n","    \"4.  **Impacto de las Reseñas:** Las **puntuaciones de la crítica profesional tienen una correlación positiva moderada con las ventas**. Un juego con buenas críticas tiene más probabilidades de ser un éxito comercial. Por el contrario, las **puntuaciones de los usuarios no muestran una correlación clara con las ventas**, lo que sugiere que las campañas de marketing deberían centrarse más en obtener una buena cobertura mediática y críticas positivas que en la opinión general de los usuarios.\\n\",\n","    \"\\n\",\n","    \"5.  **Perfiles Regionales:** Es crucial adaptar las campañas publicitarias a cada región:\\n\",\n","    \"    * **Norteamérica:** Enfocarse en PS4 y Xbox One, con juegos de Acción y Disparos dirigidos a un público Maduro (rating 'M').\\n\",\n","    \"    * **Europa:** Priorizar la PS4 con géneros similares a los de Norteamérica (Acción, Disparos, Deportes).\\n\",\n","    \"    * **Japón:** Centrarse en la 3DS y PS4, con un fuerte énfasis en el género de Rol (RPG) y juegos para audiencias de todas las edades.\\n\",\n","    \"\\n\",\n","    \"Basado en estos hallazgos, para la campaña de 2017, se recomienda invertir en títulos de acción y disparos para PS4 y Xbox One en los mercados occidentales, y en juegos de rol para 3DS y PS4 en el mercado japonés. La calidad, reflejada en las críticas profesionales, es un factor importante para el éxito de un juego.\"\n","   ]\n","  }\n"," ],\n"," \"metadata\": {\n","  \"kernelspec\": {\n","   \"display_name\": \"Python 3\",\n","   \"language\": \"python\",\n","   \"name\": \"python3\"\n","  },\n","  \"language_info\": {\n","   \"codemirror_mode\": {\n","    \"name\": \"ipython\",\n","    \"version\": 3\n","   },\n","   \"file_extension\": \".py\",\n","   \"mimetype\": \"text/x-python\",\n","   \"name\": \"python\",\n","   \"nbconvert_exporter\": \"python\",\n","   \"pygments_lexer\": \"ipython3\",\n","   \"version\": \"3.9.7\"\n","  }\n"," },\n"," \"nbformat\": 4,\n"," \"nbformat_minor\": 4\n","}"],"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'null' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-2988228606.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     24\u001b[0m   {\n\u001b[1;32m     25\u001b[0m    \u001b[0;34m\"cell_type\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"code\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 26\u001b[0;31m    \u001b[0;34m\"execution_count\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnull\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     27\u001b[0m    \u001b[0;34m\"metadata\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m    \u001b[0;34m\"outputs\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'null' is not defined"]}],"execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"OVRhp2EUemtV","executionInfo":{"status":"error","timestamp":1760407752476,"user_tz":300,"elapsed":120,"user":{"displayName":"Jorge Zendejas","userId":"00107105121904705417"}},"outputId":"c099d8b0-0e68-4dd0-9c36-1d94e0f1ee3a"}}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}